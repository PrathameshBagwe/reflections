What happens when you initialize a repository? Why do you need to do it?
  When i initialize a repisitory using 'git init', a new directory named .git is created in thAT DIRECTORY.
  We need to do this in order to be able to save different commits.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
  The staging area is from where the files can be commited.
  It is useful in the sense that we can choose which files we have to commit.

How can you use the staging area to make sure you have one commit per logical change?
    We can compare the staging area with the repository to make sure we 
    have only made one logical change.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
    Branches are helpful when u have to keep your original file safe and only tryout a new feature on an experimental basis.

How do the diagrams help you visualize the branch structure?
    I can now easily make switch to different versions and know what changes exist in them.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	  After merging one branch into the other, the contents of both the branches are obtained in the final commit. Since we r merging the two commits, we now represent them as only one branch.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
	   Merging two versions of a file is a very tedious job, git's automatic merging is a lot more efficient. Even conflicts can easily be resolved as compared to manual merging.